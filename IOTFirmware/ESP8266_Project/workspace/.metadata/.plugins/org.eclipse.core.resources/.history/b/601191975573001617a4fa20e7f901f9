//#include <ESP8266WiFi.h>
//#include <PubSubClient.h>
//#include "parson.h"
//#include <ESP8266WebServer.h>
//#include <EEPROM.h>
//#include <ArduinoJson.h>
#define USART_CHECK
#define DEBUG
#define DEBUG_USART
#define DEBUG_USART_MQTT_REC
#define MQTT_DEBUG_CONNECTION
#define DEBUG_MQTT_PRO


// Update these with values suitable for your network.

const char* ssid = "AP_cisco";
const char* password = "Chantroiviet@2014";

const char* mqtt_server = "iot.eclipse.org";
const char* userName = "ndbn200491";
const char* userPassword = "ndbn1909";
//const char* mqtt_server = "broker.mqtt-dashboard.com";
const char* ssid_ap = "greenturaHost2";
const char* pass_ap = "12345678" ;
const char* pubTopic = "bangNguyen";
//const char* mqtt_server = "broker.hivemq.com";
int cntStatus= 0;
ESP8266WebServer server(80);
WiFiClient espClient;
WiFiServer espServer(80);
PubSubClient client(espClient);
String content;
int seriCnt = 0 ;
long lastMsg = 0;
long lastWiFiConnect ;
char msg[50];
String httpMsgPayload ;
char jsonTxMsg[300];
int value = 0;
int is = 0  ;


StaticJsonBuffer<300> jsonBuffer;


 //
 // Step 2: Build object tree in memory
 //
 JsonObject& root = jsonBuffer.createObject();
//JsonArray& data = root.createNestedArray("data");

/* typedef union ctrDataPackage{
	char bufferDrvRx[25];
	 struct
	    {
		float humi;
		float temp;
		float ph;
		float curr;
		float vol ;
		uint16_t timeCalib;
		uint8_t ctrlBot1Satus ;
		uint8_t ctrlBot2Satus ;
		uint8_t ctrlBot3Satus ;
	    };
}sensorDataStruct_t;
*/
typedef union {
  char bufferDrvRx[20];
  struct{

	  uint16_t tempVal;
	  uint16_t humdVal;
	  uint16_t ecVal;
	  uint16_t ppmVal;
	  uint16_t PHVal;
	  uint16_t ldrVal;
	  uint16_t lastUpdateAll;
	  uint8_t sysn;
	  uint8_t sst;
	  uint8_t relay1Stt;
	  uint8_t relay2Stt;
	  uint8_t relay3Stt;
	  uint8_t relay4Stt;

  };
}driverDataStruct_t;

typedef union {
	char ctrAppData[40];
	 struct
	    {
		uint16_t  time1Bot1On;
		uint16_t  time1Bot2On;
		uint16_t  time1Bot3On;
		uint16_t  time2Bot1On;
		uint16_t  time2Bot2On;
		uint16_t  time2Bot3On;
		uint16_t  time3Bot1On;
		uint16_t  time3Bot2On;
		uint16_t  time3Bot3On;
		uint16_t  time1Bot1Off;
		uint16_t  time1Bot2Off;
		uint16_t  time1Bot3Off;
		uint16_t  time2Bot1Off;
		uint16_t  time2Bot2Off;
		uint16_t  time2Bot3Off;
		uint16_t  time3Bot1Off;
		uint16_t  time3Bot2Off;
		uint16_t  time3Bot3Off;
		uint8_t ctrlBot1;
		uint8_t ctrlBot2 ;
		uint8_t ctrlBot3;
		uint8_t ctrlMode; //
	    };

}appPackagestruct_t;




appPackagestruct_t appDataRx;
//sensorDataStruct_t sensorData;
driverDataStruct_t driverDataRx;
